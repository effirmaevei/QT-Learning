/*****
Yes. The general strategy is:
-when a key is pressed, add it to a list of pressedKeys
-when a key is released, remove it from the list of pressedKeys
-have a function that periodically fires (using QTimers). This function should check if SPACEBAR is in the pressedKeys, if so, it should shoot a bullet. Additionally, it should check if UP is in the pressedKeys, if so, it should move the character up, etc...


here is how you would track when a key is pressed:
void keyPressEvent(QKeyEvent* event){
  if (!event->isAutoRepeat()){
    keysPressed.insert(event->key());
  }
}


here is how you would track when a key is released:
void keyReleseEvent(QKeyEvent* event){
  if (!event->isAutoRepeat()){
    keysPressed.remove(event->key());
  }
}


Now, somewhere in your code, connect a QTimer to a function such as this:
void gameStep(){
  // check keysPressed, see if it has space key
  // if so, fire a bullet


  // check keysPressed, see if it has up key
  // if so, move player up


  // do a similar thing for down key, right key, and left key
}
****/

void Player::keyPressEvent(QKeyEvent *event)
{

    switch ( event->key() )
    {
    case Qt::Key_Left:
        qDebug() << "key left pressed";
        keyLeft = true;
        break;
    case Qt::Key_Right:
        qDebug() << "key right pressed";
        keyRight = true;
        break;
    case Qt::Key_Space:
    {
        if ( !event->isAutoRepeat() ){
        Bullet * bullet = new Bullet();
        bullet->setPos(x()+44,y());
        scene()->addItem(bullet);

        // play bulletsound
        if (bulletsound->state() == QMediaPlayer::PlayingState){
            bulletsound->setPosition(0);
        }
        else if (bulletsound->state() == QMediaPlayer::StoppedState){
            bulletsound->play();
        }
        }
        qDebug() << "space pressed";
    }
        keySpace = true;
        break;
    case Qt::Key_Escape:
        exit(0);
    default:
        return;
    }
}

void Player::keyReleaseEvent(QKeyEvent * event)
    {

        if ( !event->isAutoRepeat() )
        {
            switch ( event->key() )
            {
            case Qt::Key_Left:
                qDebug() << "-Key relased.";
                keyLeft = false;
                break;
            case Qt::Key_Right:
                qDebug() << "-Key relased.";
                keyRight = false;
                break;
            case Qt::Key_Space:
                qDebug() << "-Space relased.";
                keySpace = false;
                break;
            default:
                return;
            }
        }
    }

// left and right movement
void Player::movePlayer(){
    if ( keyLeft && (pos().x() > 0)) { setPos(x()-1,y()); }
    else if ( keyRight && (pos().x() + 100 < width)) setPos(x()+1,y());
}
